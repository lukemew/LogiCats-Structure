[
  {
    "titulo": "O que dizer sobre Hast Tables?",
    "conteudo": "Tabelas hash usam uma função de hash para converter chaves em índices na tabela. Essa função distribui as chaves de forma uniforme para otimizar o acesso.",
    "imagem": "assets/image/tabelas-hash.jpg"
  },
  {
    "titulo": "Analogia: Cats on The Table",
    "conteudo": "Considere uma mesa com diversas caixas onde os gatos podem ficar. Cada gato tem um número (hash) que indica em qual caixa ele deve ficar. Se você souber o número do gato, pode ir diretamente à caixa correspondente para encontrá-lo, tornando tudo mais fácil, não é mesmo?."
  },
  {
    "titulo": "Como funciona?",
    "conteudo": "Uma Hash Table é uma estrutura de dados semelhante a objetos, que consiste em uma coleção de pares chave-valor. Frequentemente, ela também é chamada de array associativo em JavaScript. Uma tabela de dispersão transforma secretamente a chave-valor em um número (também chamado de hash) usando uma função de hash. Esse número é então associado ao valor correspondente e armazenado em um compartimento de armazenamento."
  },
    {
    "titulo": "Uma breve ilustração",
    "conteudo": "",
    "imagem" : "assets/animations/ilustration-hash.gif"
  },
  {
    "titulo": "O que são as colisões?",
    "conteudo": "Ocorrem quando duas chaves diferentes têm o mesmo índice após a aplicação da função de dispersão. Existem diferentes métodos para lidar com colisões, como encadeamento (chaining) e endereçamento aberto.",
    "imagem" : "assets/image/conflito-hash.jpg"
  },
  {
    "titulo": "Onde é aplicado?",
    "conteudo": "Hash tables são amplamente utilizadas em bancos de dados, caches de memória, implementações de conjuntos e mapas em linguagens de programação (como dicionários em Python e objetos em JavaScript) devido à sua eficiência na recuperação de dados."
  } 
]