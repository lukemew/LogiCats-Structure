[
  {
    "titulo": "Árvores em Estrutura de Dados:",
    "conteudo": "Em estruturas de árvores, cada elemento, ou nó, possui um papel definido como pai, filho ou folha. Os nós são organizados hierarquicamente, proporcionando uma estrutura de dados eficaz para representar relações hierárquicas.",
    "imagem": "assets/image/presentes-arvores.jpg"
  },
  {
    "titulo": "Uma breve Analogia:",
    "conteudo": "Visualize um gato no topo de uma árvore, com ramos se estendendo abaixo dele. Cada ramo leva a outro gato ou sub-árvore. A estrutura da árvore facilita a categorização hierárquica dos gatos. Você começa no topo (raiz) e pode seguir os ramos para encontrar um gato específico. Interessante, não é?",
    "imagem" : "assets/image/cat-arvores-02.jpg"
  },
  {
    "titulo": "Uma busca eficiente:",
    "conteudo": "A principal vantagem das árvores é a eficiência na busca de elementos. A hierarquia permite uma busca eficiente, especialmente em árvores balanceadas. Nessas árvores, a altura é minimizada, o que otimiza a busca e torna a recuperação de elementos mais rápida e eficaz. <br> A seguir podemos ver um exemplo de Arvore, onde cada decisão leva a um resultado final diferente",
    "imagem": "assets/image/decisao-arvores.jpg"
  },
  {
    "titulo": "Estrutura de uma Árvore:",
    "conteudo": "Nó (Node): Um elemento individual em uma árvore que armazena dados e possui zero ou mais nós filhos.<br><br> Raiz (Root): O nó superior da árvore, a partir do qual todos os outros nós descendem. Uma árvore tem apenas uma raiz <br><br>Folha (Leaf): Um nó sem filhos, ou seja, um nó que está na extremidade da hierarquia.<br><br> Pai e Filho: Um nó é considerado o pai de seus nós filhos, e esses nós filhos são chamados de filhos desse pai.<br><br> Subárvore: Um nó e todos os seus descendentes formam uma subárvore."
  },
  {
    "titulo": "Um pouco complexo...",
    "conteudo": "No entanto, a implementação de árvores pode ser mais complexa do que outras estruturas de dados, exigindo cuidados para garantir o equilíbrio e eficiência. Em seguida, veremos um pouco sobre Árvores Binárias ",
    "imagem" : "assets/image/gato-triste-arvore.jpeg"
  },
  {
    "titulo": "Árvores Binárias",
    "conteudo": "Em uma árvore binária, cada nó tem no máximo dois filhos e isso é frequentemente útil em buscas, onde chamamos essa árvore de árvore de busca binária. Cada valor que vem do nó do lado esquerdo deve ser menor que o valor de seu pai, e no lado esquerdo, cada descendente deve ter um valor maior que o do pai.",
    "imagem" : "assets/image/binary-arvores.jpg"
  },
  {
    "titulo": "Um exemplo para entender de vez Árvores Binárias",
    "conteudo": "O nó A é a raiz da árvore. Como B é a raiz da sua sub-árvore esquerda dizemos que B é o filho esquerdo de A, do mesmo modo, C é o filho direito de A. Por isso A é o pai dos nós B e C e estes dois são irmãos.",
    "imagem" : "assets/image/exemplo-arvores.jpg"
  },
  {
    "titulo": "Uso comum:",
    "conteudo": "Árvores são utilizadas em: <br><br> Bancos de Dados: Em bancos de dados, árvores são usadas em índices para acelerar a busca por registros. Árvores de busca binária e árvores B são comumente utilizadas para otimizar operações de busca. <br><br> Sistemas de Arquivos: Estruturas de diretórios em sistemas de arquivos são frequentemente organizadas como árvores, permitindo a navegação eficiente e a organização hierárquica de arquivos e pastas. <br><br> Aprendizado de Máquina: Árvores de decisão são amplamente usadas em algoritmos de aprendizado de máquina para classificação e regressão. Elas fornecem modelos interpretables e são usadas em conjunto, formando florestas aleatórias. <br><br> Criptografia: Árvores são usadas em estruturas de dados como Merkle Trees para verificar a integridade de conjuntos de dados, especialmente em tecnologias de blockchain."
  }
]